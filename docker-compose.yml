services:
  prod-bot:
    build: ./
    restart: unless-stopped
    environment:
      - TOKEN=${TOKEN}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    profiles: [prod]
    depends_on:
      migrate:
        condition: service_completed_successfully

  dev-bot:
    build: ./
    restart: unless-stopped
    environment:
      - TOKEN=${TOKEN}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - DEBUG=${DEBUG}
    profiles: [dev]
    depends_on:
      migrate:
        condition: service_completed_successfully

  db:
    image: postgres:17.5
    restart: always
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=bot_data
    volumes:
      - konktils-db:/var/lib/postgresql/data 
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d bot_data"]
      interval: 5s
      retries: 10
      start_period: 10s
      timeout: 10s

  migrate:
    image: migrate/migrate:v4.19.0
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./migrations:/migrations:ro,z
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    command: [
      "-path", "/migrations",
      "-database", "postgres://postgres:${POSTGRES_PASSWORD}@db:5432/bot_data?sslmode=disable",
      "up"
    ]
    restart: "no"

  migrate-down:
    image: migrate/migrate:v4.19.0
    profiles: [migrate-down]
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./migrations:/migrations:ro,z
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    entrypoint: [
      "migrate", "-path", "/migrations",
      "-database", "postgres://postgres:${POSTGRES_PASSWORD}@db:5432/bot_data?sslmode=disable",
      "down"
    ]

volumes:
  konktils-db:
